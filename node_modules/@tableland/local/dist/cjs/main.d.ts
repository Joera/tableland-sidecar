/// <reference types="node" />
/// <reference types="node" />
/**
 *  Run end to end Tableland
 **/
import { type ChildProcess } from "node:child_process";
import { EventEmitter } from "node:events";
import { ValidatorDev, ValidatorPkg } from "./validators.js";
import { type Config, getAccounts, getDatabase, getRegistry, getRegistryPort, getValidator } from "./util.js";
declare class LocalTableland {
    #private;
    config: Config;
    initEmitter: EventEmitter;
    ready: boolean;
    registry?: ChildProcess;
    validator?: ValidatorDev | ValidatorPkg;
    readonly defaultRegistryPort: number;
    validatorDir?: string;
    registryDir?: string;
    docker?: boolean;
    verbose?: boolean;
    silent?: boolean;
    registryPort: number;
    constructor(configParams?: Config);
    start(): Promise<void>;
    private _deployRegistry;
    isReady(): Promise<unknown>;
    restartValidator(): Promise<void>;
    shutdown(): Promise<void>;
    shutdownRegistry(): Promise<void>;
    shutdownValidator(): Promise<void>;
}
export { LocalTableland, getAccounts, getDatabase, getRegistry, getRegistryPort, getValidator, };
export type { Config };
//# sourceMappingURL=main.d.ts.map