"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.projectBuilder = void 0;
const node_os_1 = require("node:os");
const node_fs_1 = require("node:fs");
const enquirer_1 = __importDefault(require("enquirer"));
const chalk_js_1 = require("./chalk.js");
const tableland_config_example_js_1 = __importDefault(require("./tableland.config.example.js"));
const docsLink = "https://docs.tableland.xyz";
const githubLink = "https://github.com/tablelandnetwork/local-tableland";
const projectBuilder = async function () {
    const choices = ["No", "Yes"];
    // @ts-expect-error https://github.com/enquirer/enquirer/issues/379
    const select = new enquirer_1.default.Select({
        name: "wtd",
        message: "Welcome to Tableland, do you want to create a new project?",
        choices: [...choices],
    });
    const shouldCreate = await select.run();
    if (shouldCreate === choices[0]) {
        console.log(`${chalk_js_1.chalk.yellow.bold("OK, if you change your mind run this again anytime!")}
  Don't forget to checkout our docs at ${chalk_js_1.chalk.cyan(docsLink)}
  and star us on github at ${chalk_js_1.chalk.cyan(githubLink)}`);
        return;
    }
    // check for existing config and bail if it exists
    if (configExists()) {
        console.log(`${chalk_js_1.chalk.red.bold("Config file already exists, nothing to do.")}`);
        return;
    }
    console.log(chalk_js_1.chalk.yellow(`Creating a config file.`));
    // Copy the example config to the new project
    (0, node_fs_1.writeFileSync)("tableland.config.js", [
        "const config = ",
        JSON.stringify(tableland_config_example_js_1.default, null, 2),
        ";",
        node_os_1.EOL,
        "export default config;",
    ].join(""));
    console.log(`${chalk_js_1.chalk.yellow.bold("Setup is done!")}
  You can start a local Tableland Network by running this command again.
  Use the --help flag to see an overview of usage for this cli.
  Checkout your tableland.config.js file for details.
  Checkout our docs at ${chalk_js_1.chalk.cyan(docsLink)}
  All the source is on github at ${chalk_js_1.chalk.cyan(githubLink)}`);
};
exports.projectBuilder = projectBuilder;
const configExists = function () {
    let exists;
    try {
        exists = (0, node_fs_1.readFileSync)("tableland.config.js");
    }
    catch (err) {
        // if the file doesn't exist there will be an error, and we can ignore it
    }
    return !(exists == null);
};
//# sourceMappingURL=project-builder.js.map