/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestTablelandDeployments,
  TestTablelandDeploymentsInterface,
} from "../../../contracts/test/TestTablelandDeployments";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainid",
        type: "uint256",
      },
    ],
    name: "ChainNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "statement",
        type: "string",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTableId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTableName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "statement",
        type: "string",
      },
    ],
    name: "mutate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d97806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063714c53981161005b578063714c53981461013857806388e4f1cb14610140578063b6a46b3b14610151578063ccad22de1461016457600080fd5b8063150b7a021461008d5780633e5779ee146100fb578063551026bb146101105780635d5a33a214610123575b600080fd5b6100c561009b36600461096c565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61010e610109366004610a07565b610177565b005b61010e61011e366004610a33565b610214565b61012b61027f565b6040516100f29190610acb565b61012b6102c7565b6000546040519081526020016100f2565b61010e61015f366004610bbf565b6102d1565b61010e610172366004610bfc565b61035c565b61017f6103a0565b6040517f8bb0ab970000000000000000000000000000000000000000000000000000000081523060048201526024810184905273ffffffffffffffffffffffffffffffffffffffff83811660448301529190911690638bb0ab97906064015b600060405180830381600087803b1580156101f857600080fd5b505af115801561020c573d6000803e3d6000fd5b505050505050565b61021c6103a0565b6040517f42842e0e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff84811660248301526044820184905291909116906342842e0e906064016101de565b60606102c26040518060400160405280600481526020017f7465737400000000000000000000000000000000000000000000000000000000815250600054610573565b905090565b60606102c26105b1565b6102d96103a0565b73ffffffffffffffffffffffffffffffffffffffff1663a15ab08d30836040518363ffffffff1660e01b8152600401610313929190610c43565b6020604051808303816000875af1158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190610c72565b60005550565b6103646103a0565b73ffffffffffffffffffffffffffffffffffffffff1663377af0da3084846040518463ffffffff1660e01b81526004016101de93929190610c8b565b6000466001036103c3575073012969f7e3439a9b04025b5a049eb9bad82a8c1290565b46600a036103e4575073fad44bf5b843de943a09d4f3e84949a11d3aa3e690565b4661a4b1036104065750739abd75e8640871a5a20d3b4ee6330a04c962affd90565b4661a4ba036104285750731a22854c5b1642760a827f20137a67930ae108d290565b466089036104495750735c4e6a9e5c1e1bf445a062006faf19ea6c49afea90565b4661013a0361046b57507359ef8bf2d6c102b4c42aef9189e1a9f0abfd652d90565b4662aa36a70361048e575073c50c62498448acc8dbde43da77f8d5d2e2c7597d90565b466101a4036104b0575073c72e8a7be04f2469f8c2db3f1bdf69a7d516abba90565b4662066eee036104d3575073223a74b8323914afdc3ff1e5005564dc17231d6e90565b4662013881036104f65750734b48841d4b32c4650e4abc117a03fe8b51f38f6890565b466204cb2f03610519575073030bcf3d50cad04c2e57391b12740982a930862190565b46617a690361053b575073e7f1725e7734ce288f8367e1bb143e90bb3f051290565b6040517f264e42cf00000000000000000000000000000000000000000000000000000000815246600482015260240160405180910390fd5b60608261057f466107a2565b610588846107a2565b60405160200161059a93929190610cc9565b604051602081830303815290604052905092915050565b6060466001036105d957604051806060016040528060218152602001610d4060219139905090565b46600a036105ff57604051806060016040528060218152602001610d4060219139905090565b4661a4b10361062657604051806060016040528060218152602001610d4060219139905090565b4661a4ba0361064d57604051806060016040528060218152602001610d4060219139905090565b4660890361067357604051806060016040528060218152602001610d4060219139905090565b4661013a0361069a57604051806060016040528060218152602001610d4060219139905090565b4662aa36a7036106c2576040518060600160405280602a8152602001610d61602a9139905090565b466101a4036106e9576040518060600160405280602a8152602001610d61602a9139905090565b4662066eed03610711576040518060600160405280602a8152602001610d61602a9139905090565b466201388103610739576040518060600160405280602a8152602001610d61602a9139905090565b466204cb2f03610761576040518060600160405280602a8152602001610d61602a9139905090565b46617a690361053b575060408051808201909152601d81527f687474703a2f2f6c6f63616c686f73743a383038302f6170692f76312f000000602082015290565b606060006107af83610860565b600101905060008167ffffffffffffffff8111156107cf576107cf610ae5565b6040519080825280601f01601f1916602001820160405280156107f9576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461080357509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106108a9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106108d5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106108f357662386f26fc10000830492506010015b6305f5e100831061090b576305f5e100830492506008015b612710831061091f57612710830492506004015b60648310610931576064830492506002015b600a831061093d576001015b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461096757600080fd5b919050565b60008060008060006080868803121561098457600080fd5b61098d86610943565b945061099b60208701610943565b935060408601359250606086013567ffffffffffffffff808211156109bf57600080fd5b818801915088601f8301126109d357600080fd5b8135818111156109e257600080fd5b8960208285010111156109f457600080fd5b9699959850939650602001949392505050565b60008060408385031215610a1a57600080fd5b82359150610a2a60208401610943565b90509250929050565b60008060408385031215610a4657600080fd5b610a4f83610943565b946020939093013593505050565b60005b83811015610a78578181015183820152602001610a60565b50506000910152565b60008151808452610a99816020860160208601610a5d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610ade6020830184610a81565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610b2557600080fd5b813567ffffffffffffffff80821115610b4057610b40610ae5565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610b8657610b86610ae5565b81604052838152866020858801011115610b9f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610bd157600080fd5b813567ffffffffffffffff811115610be857600080fd5b610bf484828501610b14565b949350505050565b60008060408385031215610c0f57600080fd5b82359150602083013567ffffffffffffffff811115610c2d57600080fd5b610c3985828601610b14565b9150509250929050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610bf46040830184610a81565b600060208284031215610c8457600080fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000610cc06060830184610a81565b95945050505050565b60008451610cdb818460208901610a5d565b80830190507f5f000000000000000000000000000000000000000000000000000000000000008082528551610d17816001850160208a01610a5d565b60019201918201528351610d32816002840160208801610a5d565b016002019594505050505056fe68747470733a2f2f7461626c656c616e642e6e6574776f726b2f6170692f76312f68747470733a2f2f746573746e6574732e7461626c656c616e642e6e6574776f726b2f6170692f76312fa164736f6c6343000813000a";

type TestTablelandDeploymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTablelandDeploymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestTablelandDeployments__factory extends ContractFactory {
  constructor(...args: TestTablelandDeploymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestTablelandDeployments> {
    return super.deploy(overrides || {}) as Promise<TestTablelandDeployments>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestTablelandDeployments {
    return super.attach(address) as TestTablelandDeployments;
  }
  override connect(signer: Signer): TestTablelandDeployments__factory {
    return super.connect(signer) as TestTablelandDeployments__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTablelandDeploymentsInterface {
    return new utils.Interface(_abi) as TestTablelandDeploymentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTablelandDeployments {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestTablelandDeployments;
  }
}
